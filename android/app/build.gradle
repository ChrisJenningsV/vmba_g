def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new FileNotFoundException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 34

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
        //checkReleaseBuilds false
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.vmba"
        minSdkVersion 24
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    flavorDimensions "version"

    productFlavors {
        Loganair {
            dimension "version"
            resValue "string", "flavored_app_name", "Loganair"
            applicationId "uk.co.loganair.booking"
        }
        Excursions {
            dimension "version"
            resValue "string", "flavored_app_name", "Excursions"
            applicationId "com.airexcursions"
        }
        FastJet {
            dimension "version"
            resValue "string", "flavored_app_name", "FastJet"
            applicationId "com.fastjet.reservations"
        }
        LibyanWings {
            dimension "version"
            resValue "string", "flavored_app_name", "LibyanWings"
            applicationId "com.libyanwings.bookings"
        }
        HiSky {
            dimension "version"
            resValue "string", "flavored_app_name", "HiSky"
            applicationId "aero.hisky.reservations"
        }
        medSky {
            dimension "version"
            resValue "string", "flavored_app_name", "medSky"
            applicationId "aero.medsky.reservations"
        }
        Aurigny {
            dimension "version"
            resValue "string", "flavored_app_name", "Aurigny"
            applicationId "com.aurigny.reservations"
        }
        BlueIslands {
            dimension "version"
            resValue "string", "flavored_app_name", "Blue Islands"
            applicationId "com.blueislands"
        }

        AirSwift {
            dimension "version"
            resValue "string", "flavored_app_name", "AirSWIFT"
            applicationId "com.airswift"
        }

        Caicos {
            dimension "version"
            resValue "string", "flavored_app_name", "Caicos Express Airways"
            applicationId "com.caicosexpressairways.reservations"
        }
        AirLeap {
            dimension "version"
            resValue "string", "flavored_app_name", "Air Leap"
            applicationId "se.airleap.booking"
        }
        AirGotland {
            dimension "version"
            resValue "string", "flavored_app_name", "Air Gotland"
            applicationId "se.airgotland.booking"
        }
        AirHalland {
            dimension "version"
            resValue "string", "flavored_app_name", "Air Halland"
            applicationId "se.airhalland.booking"
        }
        AirSkane {
            dimension "version"
            resValue "string", "flavored_app_name", "Air Skane"
            applicationId "se.airskane.booking"
        }
        Buraq {
            dimension "version"
            resValue "string", "flavored_app_name", "Buraq"
            applicationId "com.buraq.booking"
        }
        UnitedNigeria {
            dimension "version"
            resValue "string", "flavored_app_name", "United Nigeria Airlines"
            applicationId "com.unitednigeria.booking"
        }
        Keylime {
          dimension "version"
          resValue "string", "flavored_app_name", "Denver Air Connection"
          applicationId "com.denverairconnection.booking"
        }
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            //signingConfig signingConfigs.debug
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation 'com.android.support:multidex:1.0.3'
//    implementation 'com.google.android.material:material:1.0.0'
    implementation platform('com.google.firebase:firebase-bom:28.4.2')
}

apply plugin: 'com.google.gms.google-services'